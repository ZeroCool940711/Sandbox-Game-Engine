ps.1.1

//c0 is texture factor.  must be output as alpha
//c1 colour of output.
//c2 is dissolve thickness

def c5, 1.0,1.0,1.0,1.0
def c6, 0.0,0.0,0.0,0.0

tex t0
tex t1

//this calculates the dissolve
add r0.a, t0.b, c0//_bias
cnd r0.rgb, r0.a, c5, c6

//this calculates the second dissolve
sub r0.a, r0.a, c2.a
cnd r1.rgb, r0.a, c5, c6

//and calculate the difference ( and enhance the result x4 )
sub_x4 r0.rgb, r0, r1

//this multiples the dissolve map with the dissolve colour,
//and adds the result onto the shimmer map
mad r0.rgb, r0, c3, t1
//now also add the colour
mad r0.rgb, v0.a, c1, r0
+mov r0.a, c0.a







//ps.1.1

//c0 is texture factor.  must be output as alpha
//c1 colour of output.
//c2 is dissolve thickness
//c3 is dissolve factor

//def c5, 0.0, 0.5, 1.0, 0.0

//tex t0
//tex t1

//this calculates the dissolve
//add r0.a, t0.b, c0_bias
//cnd r0.a, r0.a, c5.b, c5.a

//this calculates the second dissolve
//sub r0.a, r0.a, c2.a
//cnd r1.a, r0.a, c5.b, c5.a

//and calculate the difference ( and enhance the result x4 )
//sub r0.rgb, r0.a, r1.a

//this multiples the dissolve map with the dissolve colour,
//and adds the result onto the shimmer map
//mad r0.rgb, r0, c3, t1
//now also add the colour
//mad r0.rgb, v0.a, c1, r0
//+mov r0.a, c0.a

//mov r0, t0
